<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on</title><link>https://gosang.github.io/posts/</link><description>Recent content in Posts on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 22 Oct 2023 20:03:14 +0100</lastBuildDate><atom:link href="https://gosang.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Modern Devops Branching Strategies: a Guide to Efficient Development Workflows</title><link>https://gosang.github.io/posts/modern-devops-branching-strategies-a-guide-to-efficient-development-workflows/</link><pubDate>Sun, 22 Oct 2023 20:03:14 +0100</pubDate><guid>https://gosang.github.io/posts/modern-devops-branching-strategies-a-guide-to-efficient-development-workflows/</guid><description>In today&amp;rsquo;s fast-paced software development world, DevOps has emerged as a vital approach for fostering collaboration between development and operations teams. A key component of DevOps is the use of branching strategies, which help teams manage code effectively, streamline workflows, and boost development efficiency.
In this blog, we&amp;rsquo;ll explore modern DevOps branching strategies, starting with the importance and rationale behind these strategies. We&amp;rsquo;ll then discuss key considerations for selecting a branching strategy and delve into the most common approaches, including GitFlow, GitHub Flow, GitLab Flow, and Trunk-Based Development (TBD), along with their specific use cases, pros, cons, and their integration with CI/CD pipelines.</description></item><item><title>Crafting Your CV With Latex and Visual Studio Code</title><link>https://gosang.github.io/posts/crafting-cv-with-latex-in-visual-studio-code/</link><pubDate>Sat, 21 Oct 2023 17:09:37 +0100</pubDate><guid>https://gosang.github.io/posts/crafting-cv-with-latex-in-visual-studio-code/</guid><description>In the professional world, your Curriculum Vitae (CV) is your introduction to potential employers and an essential tool for showcasing your skills, qualifications, and experiences. Creating an impressive and well-formatted CV is crucial. LaTeX, a powerful typesetting system, offers a superior approach to crafting CVs that stand out. Visual Studio Code (VS Code), a versatile code editor, can simplify this process. In this section, we&amp;rsquo;ll explore the context of using LaTeX and VS Code for building your CV, and we&amp;rsquo;ll provide a code snippet to get you started.</description></item><item><title>Simplifying Academic Writing Mendeley and Visual Studio Code With Latex</title><link>https://gosang.github.io/posts/simplifying-academic-writing-mendeley-and-vs-code-with-latex/</link><pubDate>Thu, 19 Oct 2023 11:47:55 +0100</pubDate><guid>https://gosang.github.io/posts/simplifying-academic-writing-mendeley-and-vs-code-with-latex/</guid><description>In the realm of academia, the process of writing research papers, academic articles, or journal submissions can be a daunting and complex task. Scholars and researchers face the arduous challenge of managing references, citations, and the actual content creation, while adhering to strict formatting guidelines. In this blog, we will explore how to streamline the process using Mendeley Desktop for reference and citation management and Visual Studio Code with LaTeX as the editor of choice.</description></item><item><title>Publish Research Papers or Formal Blogs With Visual Studio Code and Latex</title><link>https://gosang.github.io/posts/publish-research-papers-or-formal-blogs-with-visual-studio-code-and-latex/</link><pubDate>Wed, 18 Oct 2023 12:14:44 +0100</pubDate><guid>https://gosang.github.io/posts/publish-research-papers-or-formal-blogs-with-visual-studio-code-and-latex/</guid><description>In the world of academia, research papers and blogs e.g. a more formal blogs that contain mathematical notations, etc., are essential for sharing knowledge and findings with the broader community. LaTeX, a typesetting system, is the go-to choice for crafting beautifully formatted documents, but creating and managing LaTeX documents efficiently can be a challenge. Visual Studio Code, a powerful and extensible code editor, can simplify this process. In this blog, we&amp;rsquo;ll explore why Visual Studio Code is an excellent choice for creating and publishing research papers, academic journal articles, or technical blogs using LaTeX.</description></item><item><title>Learning Latex in 5 Minutes</title><link>https://gosang.github.io/posts/learning-latex-in-5-minutes/</link><pubDate>Tue, 17 Oct 2023 16:43:29 +0100</pubDate><guid>https://gosang.github.io/posts/learning-latex-in-5-minutes/</guid><description>LaTeX is a powerful typesetting system commonly used for creating documents with complex formatting, such as research papers, theses, articles, and CVs. In LaTeX, you work with a set of notations and commands to define the structure and formatting of your document. Let&amp;rsquo;s explore some essential LaTeX notations and provide examples to help you get started.
LaTeX Notations 1. Document Class In LaTeX, you start by specifying the type of document you want to create using the \documentclass command.</description></item><item><title>Creating and Maintaining a Free Blog in Github Pages, Hugo and Markdown</title><link>https://gosang.github.io/posts/create-and-maintain-free-blog-in-github-pages-hugo-and-markdown/</link><pubDate>Sun, 15 Oct 2023 12:25:49 +0100</pubDate><guid>https://gosang.github.io/posts/create-and-maintain-free-blog-in-github-pages-hugo-and-markdown/</guid><description>Context As a software engineer, programmer or developer, sharing your knowledge and experiences with the tech community is a valuable way to give back and establish your expertise. Maintaining a blog is a great way to achieve this, and it can also serve as a reference point for your personal growth and a platform to demonstrate your skills. In this guide, we&amp;rsquo;ll walk you through creating and maintaining a tech blog using GitHub Pages, Hugo, and Markdown.</description></item><item><title>Securing Your Next.js 13 Application With Http Security Headers</title><link>https://gosang.github.io/posts/securing-your-nextjs-13-application-with-http-security-headers/</link><pubDate>Wed, 24 May 2023 18:16:44 +0100</pubDate><guid>https://gosang.github.io/posts/securing-your-nextjs-13-application-with-http-security-headers/</guid><description>In the ever-evolving landscape of web security, it&amp;rsquo;s essential to employ multiple layers of defense to protect your web applications and users. One of the fundamental aspects of securing your web application is implementing HTTP security headers. These headers are crucial in preventing various attacks such as cross-site scripting (XSS), clickjacking, code injection, and many others.
In this blog, we&amp;rsquo;ll explore what HTTP security headers are, why they are important, and how to set them up in a Next.</description></item></channel></rss>