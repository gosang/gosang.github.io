<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gRPC on</title><link>https://gosang.github.io/tags/grpc/</link><description>Recent content in gRPC on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 01 Nov 2023 13:58:28 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/grpc/index.xml" rel="self" type="application/rss+xml"/><item><title>gRPC: Revolutionizing Communication in Modern Microservices with .NET Core</title><link>https://gosang.github.io/posts/design-principles/microservices/grpc/</link><pubDate>Wed, 01 Nov 2023 13:58:28 +0000</pubDate><guid>https://gosang.github.io/posts/design-principles/microservices/grpc/</guid><description>Introduction In the dynamic landscape of microservices architecture, efficient communication between services is paramount. Enter gRPC, which stands for gRPC Remote Procedure Call. It&amp;rsquo;s a high-performance, open-source RPC (Remote Procedure Call) framework developed by Google. In this blog post, we&amp;rsquo;ll delve into the intricacies of gRPC, explore its application in the context of a .NET 6 e-commerce system, and discuss best practices and use cases.
Understanding gRPC What is gRPC? gRPC is a framework that facilitates communication between distributed systems by enabling clients to make calls to methods on a server application as if it were a local object.</description></item></channel></rss>