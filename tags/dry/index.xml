<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DRY on</title><link>https://gosang.github.io/tags/dry/</link><description>Recent content in DRY on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 11 Aug 2022 13:26:13 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/dry/index.xml" rel="self" type="application/rss+xml"/><item><title>DRY Design Principle</title><link>https://gosang.github.io/posts/design-principles/dry/</link><pubDate>Thu, 11 Aug 2022 13:26:13 +0000</pubDate><guid>https://gosang.github.io/posts/design-principles/dry/</guid><description>In the realm of software development, the Don&amp;rsquo;t-Repeat-Yourself (DRY) design principle stands as a cornerstone, emphasizing the importance of avoiding redundancy in code. This principle is more than just a catchy phrase; it&amp;rsquo;s a philosophy that guides developers toward writing efficient, maintainable, and scalable code. In this blog, we&amp;rsquo;ll look into the essence of DRY, its rationale, its application in microservices and modular monolithic architectures, and its practical implementation in an e-commerce system using C# dot net core examples.</description></item></channel></rss>