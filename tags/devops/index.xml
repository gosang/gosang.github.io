<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Devops on</title><link>https://gosang.github.io/tags/devops/</link><description>Recent content in Devops on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 07 May 2021 20:03:14 +0100</lastBuildDate><atom:link href="https://gosang.github.io/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Modern Devops Branching Strategies: a Guide to Efficient Development Workflows</title><link>https://gosang.github.io/posts/devops/modern-devops-branching-strategies-a-guide-to-efficient-development-workflows/</link><pubDate>Fri, 07 May 2021 20:03:14 +0100</pubDate><guid>https://gosang.github.io/posts/devops/modern-devops-branching-strategies-a-guide-to-efficient-development-workflows/</guid><description>In today&amp;rsquo;s fast-paced software development world, DevOps has emerged as a vital approach for fostering collaboration between development and operations teams. A key component of DevOps is the use of branching strategies, which help teams manage code effectively, streamline workflows, and boost development efficiency.
In this blog, we&amp;rsquo;ll explore modern DevOps branching strategies, starting with the importance and rationale behind these strategies. We&amp;rsquo;ll then discuss key considerations for selecting a branching strategy and delve into the most common approaches, including GitFlow, GitHub Flow, GitLab Flow, and Trunk-Based Development (TBD), along with their specific use cases, pros, cons, and their integration with CI/CD pipelines.</description></item></channel></rss>