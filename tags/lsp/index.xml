<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LSP on</title><link>https://gosang.github.io/tags/lsp/</link><description>Recent content in LSP on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 01 Apr 2023 13:13:36 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/lsp/index.xml" rel="self" type="application/rss+xml"/><item><title>Liskov Substitution Principle (LSP)</title><link>https://gosang.github.io/posts/design-principles/liskov-substitution-principle/</link><pubDate>Sat, 01 Apr 2023 13:13:36 +0000</pubDate><guid>https://gosang.github.io/posts/design-principles/liskov-substitution-principle/</guid><description>In the realm of object-oriented design, the Liskov Substitution Principle (LSP) stands as a guiding light, emphasizing the importance of substitutability among objects of a base class and its derived classes. Coined by Barbara Liskov, this principle ensures that derived classes can be used interchangeably with their base classes without affecting the correctness of the program. In this blog post, we will delve into the Liskov Substitution Principle, its rationale, practical examples in C# .</description></item></channel></rss>