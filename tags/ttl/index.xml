<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TTL on</title><link>https://gosang.github.io/tags/ttl/</link><description>Recent content in TTL on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 13 Jan 2024 12:42:54 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/ttl/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing TTL (Time To Live) Feature in Mongodb Atlas With Dotnet Core</title><link>https://gosang.github.io/posts/datastore/implementing-ttl-feature-in-mongodb-atlas-with-dotnet-core/</link><pubDate>Sat, 13 Jan 2024 12:42:54 +0000</pubDate><guid>https://gosang.github.io/posts/datastore/implementing-ttl-feature-in-mongodb-atlas-with-dotnet-core/</guid><description>Introduction MongoDB, a popular NoSQL database, offers a unique feature called Time to Live (TTL), which allows documents to automatically expire after a specified period. In this blog post, we will explore the concept of TTL, its rationale, and how to implement it in an ASP.NET Core application using the MongoDB driver. We will use an e-commerce system as a case study to demonstrate the practical application of TTL in the context of microservices.</description></item></channel></rss>