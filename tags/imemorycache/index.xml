<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IMemoryCache on</title><link>https://gosang.github.io/tags/imemorycache/</link><description>Recent content in IMemoryCache on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 27 Aug 2023 08:43:48 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/imemorycache/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing In-Memory Caching in .NET Core with IMemoryCache</title><link>https://gosang.github.io/posts/design-patterns/caching/implementing-imemorycache-in-dotnet-core/</link><pubDate>Sun, 27 Aug 2023 08:43:48 +0000</pubDate><guid>https://gosang.github.io/posts/design-patterns/caching/implementing-imemorycache-in-dotnet-core/</guid><description>Caching is a fundamental technique in software development to improve application performance and responsiveness. In the context of .NET Core, one powerful tool for implementing caching is the IMemoryCache interface. In this blog post, we will explore what In-Memory Caching is, the rationale behind using it with IMemoryCache, its implementation in an e-commerce system using .NET Core, and compare its advantages with Redis Caching.
What is In-Memory Caching with IMemoryCache? In-Memory Caching is a technique where frequently accessed data is stored in memory, reducing the need to fetch it from the data source repeatedly.</description></item><item><title>Difference Between Imemorycache and Redis</title><link>https://gosang.github.io/posts/design-patterns/caching/difference-between-imemorycache-and-redis/</link><pubDate>Thu, 03 Aug 2023 08:43:48 +0000</pubDate><guid>https://gosang.github.io/posts/design-patterns/caching/difference-between-imemorycache-and-redis/</guid><description>Caching is a pivotal technique in optimizing application performance, and in the world of .NET Core, developers have two powerful tools at their disposal: .NET Core IMemoryCache and Redis Caching. Each solution has distinct characteristics and is tailored for specific use cases.
.NET Core IMemoryCache Overview In .NET Core, the IMemoryCache interface is a built-in caching mechanism that provides an in-memory store for frequently accessed data. It is part of the Microsoft.</description></item></channel></rss>