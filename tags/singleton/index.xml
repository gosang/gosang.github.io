<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Singleton on</title><link>https://gosang.github.io/tags/singleton/</link><description>Recent content in Singleton on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 May 2022 12:23:54 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/singleton/index.xml" rel="self" type="application/rss+xml"/><item><title>Singleton Pattern</title><link>https://gosang.github.io/posts/design-patterns/creational/singleton-pattern/</link><pubDate>Mon, 16 May 2022 12:23:54 +0000</pubDate><guid>https://gosang.github.io/posts/design-patterns/creational/singleton-pattern/</guid><description>Introduction Design patterns play a crucial role in software development, providing proven solutions to recurring problems. One such pattern is the Singleton pattern, a creational design pattern that ensures a class has only one instance and provides a global point of access to it.
What is the Singleton Pattern? The Singleton pattern restricts the instantiation of a class to a single instance and provides a global point of access to that instance.</description></item></channel></rss>