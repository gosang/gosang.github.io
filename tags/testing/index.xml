<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on</title><link>https://gosang.github.io/tags/testing/</link><description>Recent content in Testing on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 May 2024 10:13:09 +0100</lastBuildDate><atom:link href="https://gosang.github.io/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Load Stress Testing Dotnet Core Web Api With Apache Jmeter</title><link>https://gosang.github.io/posts/testing/load-stress-testing-dotnet-core-web-api-with-apache-jmeter/</link><pubDate>Mon, 13 May 2024 10:13:09 +0100</pubDate><guid>https://gosang.github.io/posts/testing/load-stress-testing-dotnet-core-web-api-with-apache-jmeter/</guid><description>Load and stress testing are essential aspects of ensuring the performance and reliability of web APIs. In this blog post, we&amp;rsquo;ll look into how to effectively conduct load and stress testing for ASP.NET Core 8 Web API using Apache JMeter. We&amp;rsquo;ll cover the rationale behind load and stress testing, their advantages and disadvantages, detailed methodologies, and best practices.
Understanding Load and Stress Testing What are Load and Stress Testing? Load testing involves simulating expected usage patterns on a software application to assess its behavior under normal and peak conditions.</description></item></channel></rss>