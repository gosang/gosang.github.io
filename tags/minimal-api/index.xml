<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Minimal API on</title><link>https://gosang.github.io/tags/minimal-api/</link><description>Recent content in Minimal API on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 06 Sep 2024 17:34:32 +0100</lastBuildDate><atom:link href="https://gosang.github.io/tags/minimal-api/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing Minimal API With ASP.NET Core Using Request Endpoint Response</title><link>https://gosang.github.io/posts/dotnet/implementing-minimal-api-with-asp-dotnet-core-using-pepr/</link><pubDate>Fri, 06 Sep 2024 17:34:32 +0100</pubDate><guid>https://gosang.github.io/posts/dotnet/implementing-minimal-api-with-asp-dotnet-core-using-pepr/</guid><description>With the release of ASP.NET Core 6, the framework introduced Minimal APIs, providing a streamlined approach to building APIs. This model is particularly well-suited for small-scale, microservices-based applications or simple APIs that don&amp;rsquo;t require the overhead of a full MVC structure. In this blog, we will explore the Minimal API approach using the REPR (Request-Endpoint-Response) pattern, which simplifies API development by breaking down the process into three primary steps: handling requests, defining endpoints, and crafting responses.</description></item></channel></rss>