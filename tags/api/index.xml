<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API on</title><link>https://gosang.github.io/tags/api/</link><description>Recent content in API on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 08 Jun 2024 12:21:44 +0100</lastBuildDate><atom:link href="https://gosang.github.io/tags/api/index.xml" rel="self" type="application/rss+xml"/><item><title>API Versioning in ASP.NET Core</title><link>https://gosang.github.io/posts/dotnet/rest-api/api-versioning-in-asp-dotnet-core/</link><pubDate>Sat, 08 Jun 2024 12:21:44 +0100</pubDate><guid>https://gosang.github.io/posts/dotnet/rest-api/api-versioning-in-asp-dotnet-core/</guid><description>API Versioning is a critical aspect of building and maintaining robust and scalable APIs. It allows developers to introduce new features and improvements while maintaining backward compatibility for existing clients. We will look into the rationale behind API versioning, the problems it resolves, and the implementations of various versioning strategies in ASP.NET Core.
Why API Versioning? Backward Compatibility: Ensures existing clients continue to function even when new features are added. Controlled Evolution: Allows incremental and controlled release of new functionalities.</description></item></channel></rss>