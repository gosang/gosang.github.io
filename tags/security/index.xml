<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on</title><link>https://gosang.github.io/tags/security/</link><description>Recent content in Security on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 09 Feb 2025 20:34:35 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>JavaScript Security Risks and Best Practices for Mitigation</title><link>https://gosang.github.io/posts/react/javascript-security-risks-and-best-practices-for-mitigation/</link><pubDate>Sun, 09 Feb 2025 20:34:35 +0000</pubDate><guid>https://gosang.github.io/posts/react/javascript-security-risks-and-best-practices-for-mitigation/</guid><description>JavaScript is one of the most popular programming languages for web development. It powers dynamic content on web pages, enabling interactive and responsive user experiences. However, its ubiquity and powerful features also make it a target for various security threats. Understanding the security risks associated with JavaScript and implementing best practices to mitigate them is essential for developers and businesses alike.
In this blog, we will explore common JavaScript security risks, provide code examples to illustrate these risks, and discuss best practices for secure coding.</description></item><item><title>Simplifying Cookie-based and Token-based Authentication</title><link>https://gosang.github.io/posts/security/simplifying-cookie-based-and-token-based-authentication/</link><pubDate>Sat, 13 Jul 2024 12:06:57 +0100</pubDate><guid>https://gosang.github.io/posts/security/simplifying-cookie-based-and-token-based-authentication/</guid><description>Authentication is a fundamental aspect of web security, ensuring that users are who they claim to be. Two prevalent methods for handling authentication are Cookie-based and Token-based authentication. In this blog, weâ€™ll look into these methods, exploring their concepts, functionalities, advantages, and drawbacks. Additionally, we will provide detailed implementation guides for using Keycloak as an Identity Provider for Token-based authentication in a .NET Core 8 API project and for Cookie-based authentication in a React Next.</description></item><item><title>Simplifying the OAuth, OpenID, and JWT</title><link>https://gosang.github.io/posts/security/simplifying-oauth-openid-and-jwt/</link><pubDate>Sun, 30 Jun 2024 16:31:03 +0100</pubDate><guid>https://gosang.github.io/posts/security/simplifying-oauth-openid-and-jwt/</guid><description>In the realm of web development, securing applications and user data is paramount. Authentication, authorization, and token management play crucial roles in this process. This blog will simplify the three key technologies: OAuth, OpenID, and JWT, explaining their purposes, how they work, and when to use them.
Authentication vs. Authorization What is Authentication? Authentication is the process of verifying the identity of a user or system. It answers the question, &amp;ldquo;Who are you?</description></item></channel></rss>