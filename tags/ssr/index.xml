<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SSR on</title><link>https://gosang.github.io/tags/ssr/</link><description>Recent content in SSR on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 18 Aug 2024 12:44:19 +0100</lastBuildDate><atom:link href="https://gosang.github.io/tags/ssr/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing Cookie Based Stateless Sessions in Next Js Using Server Actions</title><link>https://gosang.github.io/posts/react/implementing-cookie-based-stateless-sessions-in-next-js-using-server-actions/</link><pubDate>Sun, 18 Aug 2024 12:44:19 +0100</pubDate><guid>https://gosang.github.io/posts/react/implementing-cookie-based-stateless-sessions-in-next-js-using-server-actions/</guid><description>Introduction In modern web development, managing user sessions efficiently and securely is crucial. One approach is to use cookie-based stateless sessions. This method leverages cookies to store session data client-side, reducing server-side complexity and improving scalability. In this blog post, we&amp;rsquo;ll explore how to implement cookie-based stateless sessions in a Next.js application using Server Actions, focusing on managing user settings like theme preferences.
What is Cookie-Based Stateless Session? A cookie-based stateless session involves storing session data in cookies, allowing the server to remain stateless.</description></item><item><title>Advanced Server Rendering: React Query With Next.js App Router</title><link>https://gosang.github.io/posts/react/advanced-server-rendering-react-query-with-nextjs-app-router/</link><pubDate>Sun, 02 Jun 2024 11:50:29 +0100</pubDate><guid>https://gosang.github.io/posts/react/advanced-server-rendering-react-query-with-nextjs-app-router/</guid><description>Server-side rendering (SSR) and static site generation (SSG) are essential techniques in modern web development to improve performance, SEO, and user experience. In this blog, we will look into how to effectively use React Query with the Next.js App Router for advanced server rendering. We will cover the concepts, setup, and practical implementations with React and TypeScript examples. Let&amp;rsquo;s get started!
Understanding Server Rendering Server-Side Rendering (SSR) SSR generates HTML on the server for each request.</description></item></channel></rss>