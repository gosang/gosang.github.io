<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OOP on</title><link>https://gosang.github.io/tags/oop/</link><description>Recent content in OOP on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 28 Aug 2024 11:50:48 +0100</lastBuildDate><atom:link href="https://gosang.github.io/tags/oop/index.xml" rel="self" type="application/rss+xml"/><item><title>Simplifying Object-Oriented Programming in ASP.NET Core with C#</title><link>https://gosang.github.io/posts/dotnet/simplifying-object-oriented-programming-in-asp-dotnet-core/</link><pubDate>Wed, 28 Aug 2024 11:50:48 +0100</pubDate><guid>https://gosang.github.io/posts/dotnet/simplifying-object-oriented-programming-in-asp-dotnet-core/</guid><description>Introduction to Object-Oriented Programming (OOP) Object-Oriented Programming (OOP) is a programming paradigm that organizes software design around data, or objects, rather than functions and logic. An object can be thought of as a real-world entity that has attributes (data) and behaviors (functions). OOP aims to improve the clarity, quality, and development time of software by modeling it closer to the real-world system it represents.
Rationale Behind OOP The rationale behind OOP is to create reusable, modular, and maintainable code.</description></item><item><title>General Responsibility Assignment Software Patterns (GRASP)</title><link>https://gosang.github.io/posts/design-patterns/object-oriented/grasp/</link><pubDate>Thu, 22 Jun 2023 19:18:44 +0000</pubDate><guid>https://gosang.github.io/posts/design-patterns/object-oriented/grasp/</guid><description>When it comes to designing software systems, achieving a clear and maintainable architecture is paramount. General Responsibility Assignment Software Patterns (GRASP) is a set of principles that aids in designing object-oriented systems with a focus on responsibility assignment. In this blog post, we will look into the core concepts of GRASP, its rationale, and how it can be effectively applied in the context of an e-commerce system using .NET Core, MediatR, AutoMapper, EF Core InMemory database, and React.</description></item></channel></rss>