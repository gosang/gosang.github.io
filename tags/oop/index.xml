<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OOP on</title><link>https://gosang.github.io/tags/oop/</link><description>Recent content in OOP on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 22 Jun 2023 19:18:44 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/oop/index.xml" rel="self" type="application/rss+xml"/><item><title>General Responsibility Assignment Software Patterns (GRASP)</title><link>https://gosang.github.io/posts/design-patterns/object-oriented/grasp/</link><pubDate>Thu, 22 Jun 2023 19:18:44 +0000</pubDate><guid>https://gosang.github.io/posts/design-patterns/object-oriented/grasp/</guid><description>When it comes to designing software systems, achieving a clear and maintainable architecture is paramount. General Responsibility Assignment Software Patterns (GRASP) is a set of principles that aids in designing object-oriented systems with a focus on responsibility assignment. In this blog post, we will look into the core concepts of GRASP, its rationale, and how it can be effectively applied in the context of an e-commerce system using .NET Core, MediatR, AutoMapper, EF Core InMemory database, and React.</description></item></channel></rss>