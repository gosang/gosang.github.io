<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Composite Pattern on</title><link>https://gosang.github.io/tags/composite-pattern/</link><description>Recent content in Composite Pattern on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Jun 2022 12:56:42 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/composite-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Composite Pattern</title><link>https://gosang.github.io/posts/design-patterns/structural/composite-pattern/</link><pubDate>Thu, 16 Jun 2022 12:56:42 +0000</pubDate><guid>https://gosang.github.io/posts/design-patterns/structural/composite-pattern/</guid><description>The Composite Pattern is a structural design pattern that allows you to compose objects into tree structures to represent part-whole hierarchies. This pattern lets clients treat individual objects and compositions of objects uniformly. In simpler terms, it enables you to work with both individual objects and groups of objects in a unified manner.
Rationale behind the Composite Pattern The primary goal of the Composite Pattern is to treat individual objects and compositions of objects uniformly.</description></item></channel></rss>