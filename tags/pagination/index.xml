<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pagination on</title><link>https://gosang.github.io/tags/pagination/</link><description>Recent content in Pagination on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 08 Mar 2025 12:27:06 +0100</lastBuildDate><atom:link href="https://gosang.github.io/tags/pagination/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing Range-Based Pagination With MongoDB C# Driver in ASP.NET Core 8</title><link>https://gosang.github.io/posts/dotnet/implementing-range-based-pagination-with-mongodb-csharp-driver-in-asp-dotnet-core/</link><pubDate>Sat, 08 Mar 2025 12:27:06 +0100</pubDate><guid>https://gosang.github.io/posts/dotnet/implementing-range-based-pagination-with-mongodb-csharp-driver-in-asp-dotnet-core/</guid><description>Pagination is essential for handling large datasets efficiently in web applications. While traditional offset-based pagination (using skip and limit) works well for small datasets, it can become inefficient for large collections due to performance degradation. Range-based pagination, also known as keyset pagination, is a more performant alternative that uses indexed fields (like timestamps or IDs) to retrieve results.
This blog post will explain how to implement Range-Based Pagination with the MongoDB C# driver in ASP.</description></item><item><title>Implementing Pagination with MongoDB C# Driver in ASP.NET Core 8</title><link>https://gosang.github.io/posts/dotnet/implementing-pagination-with-mongodb-csharp-driver-in-asp-dotnet-core/</link><pubDate>Sun, 02 Mar 2025 12:27:06 +0100</pubDate><guid>https://gosang.github.io/posts/dotnet/implementing-pagination-with-mongodb-csharp-driver-in-asp-dotnet-core/</guid><description>Pagination is a crucial aspect of application development, especially when dealing with large datasets in databases. It ensures that data is fetched in manageable chunks, improving performance and user experience. In this blog, we’ll explore how to implement pagination using the MongoDB C# driver in an ASP.NET Core 8 API project. We’ll cover the key concepts, functions, and best practices while discussing when and when not to use pagination.
What is Pagination?</description></item></channel></rss>