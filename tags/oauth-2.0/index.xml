<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OAuth 2.0 on</title><link>https://gosang.github.io/tags/oauth-2.0/</link><description>Recent content in OAuth 2.0 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 07 Jul 2024 12:02:22 +0100</lastBuildDate><atom:link href="https://gosang.github.io/tags/oauth-2.0/index.xml" rel="self" type="application/rss+xml"/><item><title>Simplifying OAuth 2 in Istio Proxy, Sidecar and Envoy Filter</title><link>https://gosang.github.io/posts/istio/simplifying-oauth-2-in-istio-proxy-sidecar-and-envoy-filter/</link><pubDate>Sun, 07 Jul 2024 12:02:22 +0100</pubDate><guid>https://gosang.github.io/posts/istio/simplifying-oauth-2-in-istio-proxy-sidecar-and-envoy-filter/</guid><description>In the context of microservices and cloud-native applications, securing APIs and ensuring proper authentication are critical. OAuth 2.0 is a widely adopted authorization framework designed to provide secure access to resources. When working with Istio, a popular service mesh for managing microservices, integrating OAuth 2.0 can be achieved through various mechanisms such as OAuth 2.0 Proxy, OAuth 2.0 Sidecar Proxy, and OAuth 2.0 Envoy Filter. This blog aims to explain these concepts, their rationale, main functions, sample implementation with Keycloak as an Identity Provider, and provide guidance on their use cases.</description></item><item><title>Securing ASP.NET Core Web API With OAuth 2.0 in Microsoft Entra ID</title><link>https://gosang.github.io/posts/dotnet/securing-asp-dotnet-core-web-api-with-oauth-2.0-in-microsoft-entra-id/</link><pubDate>Sun, 28 Jan 2024 14:22:05 +0000</pubDate><guid>https://gosang.github.io/posts/dotnet/securing-asp-dotnet-core-web-api-with-oauth-2.0-in-microsoft-entra-id/</guid><description>OAuth 2.0 is a widely adopted protocol for securing web applications and APIs. It provides a standardized way for third-party applications to obtain limited access to a user&amp;rsquo;s resources without exposing their credentials. In this blog post, we will explore the fundamentals of OAuth 2.0 and how to implement it to secure an ASP.NET Core Web API using Microsoft Entra ID.
Understanding OAuth 2.0 What is OAuth 2.0? OAuth 2.0 is an open standard authorization framework that enables secure, delegated access to resources.</description></item></channel></rss>