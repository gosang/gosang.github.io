<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Idempotency on</title><link>https://gosang.github.io/tags/idempotency/</link><description>Recent content in Idempotency on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 25 Apr 2022 13:58:28 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/idempotency/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding Idempotency in Microservices with .NET Core</title><link>https://gosang.github.io/posts/design-principles/microservices/idempotency/</link><pubDate>Mon, 25 Apr 2022 13:58:28 +0000</pubDate><guid>https://gosang.github.io/posts/design-principles/microservices/idempotency/</guid><description>Introduction In distributed systems and microservices architecture, ensuring the reliability and consistency of operations becomes a critical challenge. One key concept that plays a pivotal role in addressing this challenge is Idempotency. In this blog post, we&amp;rsquo;ll look into the meaning of Idempotency, explore its rationale, understand its applications in the context of microservices (using .NET Core), and discuss the advantages, disadvantages, and best practices associated with it.
What is Idempotency?</description></item></channel></rss>