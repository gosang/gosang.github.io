<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Optimistic Concurrency on</title><link>https://gosang.github.io/tags/optimistic-concurrency/</link><description>Recent content in Optimistic Concurrency on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 27 Jan 2024 13:14:30 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/optimistic-concurrency/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimistic Concurrency With Etag in ASP.NET Core 8</title><link>https://gosang.github.io/posts/datastore/optimistic-concurrency-with-etag-in-asp-dotnet-core-8/</link><pubDate>Sat, 27 Jan 2024 13:14:30 +0000</pubDate><guid>https://gosang.github.io/posts/datastore/optimistic-concurrency-with-etag-in-asp-dotnet-core-8/</guid><description>Optimistic concurrency is a critical strategy for managing concurrent updates in modern web applications. The ETag header, or Entity Tag, serves as a powerful mechanism to implement optimistic concurrency. In this blog post, we&amp;rsquo;ll thoroughly explore what ETag is, its rationale, how it differs from pessimistic concurrency, and how to leverage it in a .NET Core 8 e-commerce system. Additionally, we&amp;rsquo;ll look into two approaches for optimistic concurrency: one using Database-Generated Tokens and another using Application-Managed Tokens.</description></item></channel></rss>