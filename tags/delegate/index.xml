<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Delegate on</title><link>https://gosang.github.io/tags/delegate/</link><description>Recent content in Delegate on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 17 Mar 2024 18:05:34 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/delegate/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding the Action, Func and Predicate Delegate Types in ASP.NET Core 8</title><link>https://gosang.github.io/posts/dotnet/understanding-action-func-and-predicate-delegate-types-in-asp.net-core-8/</link><pubDate>Sun, 17 Mar 2024 18:05:34 +0000</pubDate><guid>https://gosang.github.io/posts/dotnet/understanding-action-func-and-predicate-delegate-types-in-asp.net-core-8/</guid><description>Delegates are powerful constructs in C# that allow for defining and passing around references to methods, providing flexibility and extensibility in programming. Two commonly used delegate types in C# are Action and Func. In this blog post, we&amp;rsquo;ll delve into what these delegate types are, their rationale, how they&amp;rsquo;re used, and provide examples to illustrate their utility.
What are Delegates? A delegate in C# is a type that represents references to methods with a particular parameter list and return type.</description></item></channel></rss>