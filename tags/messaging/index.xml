<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Messaging on</title><link>https://gosang.github.io/tags/messaging/</link><description>Recent content in Messaging on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 29 Jun 2022 13:58:28 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/messaging/index.xml" rel="self" type="application/rss+xml"/><item><title>Using RabbitMQ with ASP.NET Core</title><link>https://gosang.github.io/posts/design-principles/messaging/rabbitmq-with-dotnet-core/</link><pubDate>Wed, 29 Jun 2022 13:58:28 +0000</pubDate><guid>https://gosang.github.io/posts/design-principles/messaging/rabbitmq-with-dotnet-core/</guid><description>In the ever-evolving landscape of modern software development, efficient communication between components is crucial. As applications grow in complexity and adopt microservices architecture, a reliable message broker is essential. RabbitMQ, a powerful open-source message broker, has become a cornerstone technology for achieving scalable and robust communication between different parts of an application. In this blog, we will dive deep into RabbitMQ, explain its rationale, explore how it resolves common problems, and demonstrate its usage with ASP.</description></item></channel></rss>