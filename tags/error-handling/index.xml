<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Error handling on</title><link>https://gosang.github.io/tags/error-handling/</link><description>Recent content in Error handling on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 26 Jan 2025 20:34:35 +0000</lastBuildDate><atom:link href="https://gosang.github.io/tags/error-handling/index.xml" rel="self" type="application/rss+xml"/><item><title>Error Handling in Next.js With TypeScript</title><link>https://gosang.github.io/posts/react/error-handling-in-nextjs-with-typescript/</link><pubDate>Sun, 26 Jan 2025 20:34:35 +0000</pubDate><guid>https://gosang.github.io/posts/react/error-handling-in-nextjs-with-typescript/</guid><description>Error handling is a critical aspect of building robust and maintainable web applications. In the context of Next.js, a powerful React framework, and TypeScript, a typed superset of JavaScript, error handling is even more crucial. Combining Next.js with TypeScript allows developers to catch errors at compile time, but runtime errors and exceptions still need careful handling. This blog explores the best practices for error handling in Next.js with TypeScript, providing actionable insights and detailed code samples.</description></item></channel></rss>