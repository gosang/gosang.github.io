<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design Principles on</title><link>https://gosang.github.io/series/design-principles/</link><description>Recent content in Design Principles on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Sep 2022 13:13:36 +0000</lastBuildDate><atom:link href="https://gosang.github.io/series/design-principles/index.xml" rel="self" type="application/rss+xml"/><item><title>SOLID Design Principles</title><link>https://gosang.github.io/posts/design-principles/solid/</link><pubDate>Thu, 01 Sep 2022 13:13:36 +0000</pubDate><guid>https://gosang.github.io/posts/design-principles/solid/</guid><description>SOLID is a set of five design principles that aim to create robust, scalable, and maintainable software. These principles were introduced by Robert C. Martin and have become a cornerstone for object-oriented design. In this blog post, we&amp;rsquo;ll delve into each SOLID principle, discuss their rationale, provide practical examples in C# .NET Core, and explore how they can be applied in both monolithic and microservices architectures.
What is SOLID? SOLID is an acronym that represents five design principles:</description></item><item><title>DRY Design Principle</title><link>https://gosang.github.io/posts/design-principles/dry/</link><pubDate>Thu, 11 Aug 2022 13:26:13 +0000</pubDate><guid>https://gosang.github.io/posts/design-principles/dry/</guid><description>In the realm of software development, the Don&amp;rsquo;t-Repeat-Yourself (DRY) design principle stands as a cornerstone, emphasizing the importance of avoiding redundancy in code. This principle is more than just a catchy phrase; it&amp;rsquo;s a philosophy that guides developers toward writing efficient, maintainable, and scalable code. In this blog, we&amp;rsquo;ll delve into the essence of DRY, its rationale, its application in microservices and modular monolithic architectures, and its practical implementation in an e-commerce system using C# dot net core examples.</description></item></channel></rss>