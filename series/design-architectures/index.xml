<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design Architectures on</title><link>https://gosang.github.io/series/design-architectures/</link><description>Recent content in Design Architectures on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 30 May 2023 13:58:28 +0000</lastBuildDate><atom:link href="https://gosang.github.io/series/design-architectures/index.xml" rel="self" type="application/rss+xml"/><item><title>Modular Monolithic Architecture</title><link>https://gosang.github.io/posts/design-architectures/modular-monolithic-architecture/</link><pubDate>Tue, 30 May 2023 13:58:28 +0000</pubDate><guid>https://gosang.github.io/posts/design-architectures/modular-monolithic-architecture/</guid><description>In the ever-evolving landscape of software development, choosing the right architecture is crucial for building scalable, maintainable, and efficient applications. One architecture gaining popularity is the Modular Monolithic Architecture. In this blog, we&amp;rsquo;ll explore what this architecture entails, its key components, advantages, disadvantages, use cases, and best practices.
What is Modular Monolithic Architecture? Modular Monolithic Architecture is an approach that combines the modularity of microservices with the simplicity of a monolithic architecture.</description></item><item><title>Domain Driven Design (DDD)</title><link>https://gosang.github.io/posts/design-architectures/domain-driven-design/</link><pubDate>Tue, 16 May 2023 13:58:28 +0000</pubDate><guid>https://gosang.github.io/posts/design-architectures/domain-driven-design/</guid><description>Domain Driven Design (DDD) is a methodology that empowers developers to create software systems closely aligned with the complexities of real-world business domains. In this comprehensive guide, we will explore the fundamentals of DDD, its core concepts, and practical applications within an e-commerce system using C# .NET Core.
Understanding Domain Driven Design (DDD) At its essence, Domain Driven Design is an approach to software development that emphasizes collaboration between domain experts and developers.</description></item><item><title>Microservices Design Architecture</title><link>https://gosang.github.io/posts/design-architectures/microservices/</link><pubDate>Sun, 15 Jan 2023 13:58:28 +0000</pubDate><guid>https://gosang.github.io/posts/design-architectures/microservices/</guid><description>In the ever-evolving landscape of software development, Microservices Design Architecture has emerged as a game-changer. This architectural paradigm brings flexibility, scalability, and maintainability to the forefront. In this blog, we&amp;rsquo;ll take a deep dive into what microservices are, their key concepts, design architecture, and when to leverage this approach for building robust systems.
What are Microservices? Microservices is an architectural style where a software application is composed of small, independent services that communicate with each other through well-defined APIs.</description></item></channel></rss>